1365)how-many-numbers-are-smaller-than-the-current-number

class Solution:
    def smallerNumbersThanCurrent(self, nums: List[int]) -> List[int]:
        n=len(nums)
        res=[]
        for i in range(n):
            count=0
            for j in range(n):
                if nums[i]>nums[j]:
                    count+=1
            res.append(count)
        return res


561)Array-partition

class Solution:
    def arrayPairSum(self, nums: List[int]) -> int:
        n=len(nums)
        ans=0
        nums.sort()
        for i in range(0,n,2):
            ans+=nums[i]
        return ans


1773)count-items-matching-a-rule

class Solution:
    def countMatches(self, items: List[List[str]], ruleKey: str, ruleValue: str) -> int:
        count = 0
        for product in items:
            if ruleKey == "type":
                if product[0] == ruleValue:
                    count += 1
            elif ruleKey == "color":
                if product[1] == ruleValue:
                    count += 1
            elif ruleKey == "name":
                if product[2] == ruleValue:
                    count += 1
        return count
